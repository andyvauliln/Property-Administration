# Generated by Django 4.2.4 on 2024-01-17 10:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(blank=True, max_length=128, null=True)),
                ('full_name', models.CharField(db_index=True, max_length=255)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('role', models.CharField(choices=[('Admin', 'Admin'), ('Cleaner', 'Cleaner'), ('Manager', 'Manager'), ('Tenant', 'Tenant'), ('Owner', 'Owner')], max_length=14)),
                ('notes', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Apartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255)),
                ('web_link', models.URLField(blank=True, null=True)),
                ('building_n', models.CharField(max_length=10)),
                ('street', models.CharField(max_length=255)),
                ('apartment_n', models.CharField(blank=True, max_length=10, null=True)),
                ('state', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('zip_index', models.CharField(max_length=10)),
                ('bedrooms', models.IntegerField()),
                ('bathrooms', models.IntegerField()),
                ('apartment_type', models.CharField(choices=[('In Management', 'In Management'), ('In Ownership', 'In Ownership')], db_index=True, max_length=15)),
                ('status', models.CharField(choices=[('Available', 'Available'), ('Unavailable', 'Unavailable')], db_index=True, max_length=14)),
                ('notes', models.TextField(blank=True, null=True)),
                ('start_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('manager', models.ForeignKey(blank=True, limit_choices_to={'role': 'Manager'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_apartments', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(blank=True, limit_choices_to={'role': 'Owner'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owned_apartments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(db_index=True)),
                ('end_date', models.DateField(db_index=True)),
                ('status', models.CharField(blank=True, choices=[('Confirmed', 'Confirmed'), ('Waiting Contract', 'Waiting Contract'), ('Waiting Payment', 'Waiting Payment'), ('Blocked', 'Blocked')], db_index=True, default='Waiting Contract', max_length=32)),
                ('animals', models.CharField(blank=True, choices=[('Cat', 'Cat'), ('Dog', 'Dog'), ('Other', 'Other')], max_length=32)),
                ('visit_purpose', models.CharField(blank=True, choices=[('Tourism', 'Tourism'), ('Work', 'Work'), ('Medical', 'Medical'), ('Between Houses', 'Between Houses'), ('Snow Bird', 'Snow Bird'), ('Other', 'Other')], max_length=32)),
                ('source', models.CharField(blank=True, choices=[('Airbnb', 'Airbnb'), ('Referral', 'Referral'), ('Returning', 'Returning'), ('Other', 'Other')], max_length=32)),
                ('notes', models.TextField(blank=True, null=True)),
                ('other_tenants', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('apartment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='booked_apartments', to='mysite.apartment')),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bookings', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Cleaning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True)),
                ('status', models.CharField(choices=[('Scheduled', 'Scheduled'), ('Completed', 'Completed')], db_index=True, default='Scheduled', max_length=32)),
                ('tasks', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('booking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cleanings', to='mysite.booking')),
                ('cleaner', models.ForeignKey(limit_choices_to={'role': 'Cleaner'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cleanings', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('type', models.CharField(choices=[('Payment Method', 'Payment Method'), ('Bank', 'Bank')], db_index=True, max_length=32)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PaymenType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('type', models.CharField(choices=[('In', 'In'), ('Out', 'Out')], db_index=True, max_length=32)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_date', models.DateField(db_index=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=14)),
                ('payment_status', models.CharField(choices=[('Pending', 'Pending'), ('Completed', 'Completed')], db_index=True, default='Pending', max_length=32)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('apartment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='mysite.apartment')),
                ('bank', models.ForeignKey(blank=True, limit_choices_to={'type': 'Bank'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bank_payments', to='mysite.paymentmethod')),
                ('booking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='mysite.booking')),
                ('payment_method', models.ForeignKey(blank=True, limit_choices_to={'type': 'Payment Method'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payment_methods_payments', to='mysite.paymentmethod')),
                ('payment_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payment_type_payments', to='mysite.paymentype')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True)),
                ('send_in_telegram', models.BooleanField(db_index=True, default=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('booking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='booking_notifications', to='mysite.booking')),
                ('cleaning', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cleaning_notifications', to='mysite.cleaning')),
                ('payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payment_notifications', to='mysite.payment')),
            ],
        ),
    ]
